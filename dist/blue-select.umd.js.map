{"version":3,"file":"blue-select.umd.js","sources":["../main.js"],"sourcesContent":["function splitClass (str) {\n  return str.replace(/ {1,}/g, ',').split(',')\n}\n\nfunction filterClass (str, cls) {\n  return splitClass(str).filter(function (match) {\n    return match !== cls && match !== ''\n  }).join(' ')\n}\n\n/**\n * Generates a basic custom select box\n * @class\n * @param {HTMLElement} el The dom node to instantiate this class using\n */\nfunction CustomSelect (el) {\n  if (!el) return false\n  var block = el.className.split(' ')[0] || 'custom-select'\n\n  this.el = el\n  this.select = el.querySelector('select')\n\n  this.selectValue = document.createElement('div')\n  this.selectValue.className = block + '__value'\n  this.selectArrow = document.createElement('div')\n  this.selectArrow.className = block + '__arrow'\n\n  this.el.appendChild(this.selectValue)\n  this.el.appendChild(this.selectArrow)\n\n  this.setFakeValue()\n\n  this.onChange = this.onChange.bind(this)\n  this.onFocus = this.onFocus.bind(this)\n  this.onBlur = this.onBlur.bind(this)\n\n  this.select.addEventListener('change', this.onChange, false)\n  this.select.addEventListener('focus', this.onFocus, false)\n  this.select.addEventListener('blur', this.onBlur, false)\n}\n/**\n * onChange event handler\n */\nCustomSelect.prototype.onChange = function () {\n  this.setFakeValue()\n}\n/**\n * onFocus event handler\n */\nCustomSelect.prototype.onFocus = function () {\n  var hasClass = splitClass(this.el.className).indexOf('is-focused') > -1\n  if (!hasClass) this.el.className += ' is-focused'\n}\n/**\n * onBlur event handler\n */\nCustomSelect.prototype.onBlur = function () {\n  var hasClass = splitClass(this.el.className).indexOf('is-focused') > -1\n  if (hasClass) this.el.className = filterClass(this.el.className, 'is-focused')\n}\n/**\n * Get the actual text value of the selected option\n */\nCustomSelect.prototype.getSelectedOptionText = function () {\n  return this.select.querySelectorAll('option')[this.select.selectedIndex === -1 ? 0 : this.select.selectedIndex].textContent\n}\n/**\n * Set/update the 'fake' value of the select\n */\nCustomSelect.prototype.setFakeValue = function () {\n  this.selectValue.innerHTML = this.getSelectedOptionText()\n}\n\nexport default CustomSelect;\n"],"names":["splitClass","str","replace","split","CustomSelect","el","block","className","select","querySelector","selectValue","document","createElement","selectArrow","appendChild","this","setFakeValue","onChange","bind","onFocus","onBlur","addEventListener","prototype","indexOf","cls","filter","match","join","getSelectedOptionText","querySelectorAll","selectedIndex","textContent","innerHTML"],"mappings":"yKAAA,SAASA,EAAYC,UACZA,EAAIC,QAAQ,SAAU,KAAKC,MAAM,KAc1C,SAASC,EAAcC,OAChBA,EAAI,OAAO,MACZC,EAAQD,EAAGE,UAAUJ,MAAM,KAAK,IAAM,qBAErCE,GAAKA,OACLG,OAASH,EAAGI,cAAc,eAE1BC,YAAcC,SAASC,cAAc,YACrCF,YAAYH,UAAYD,EAAQ,eAChCO,YAAcF,SAASC,cAAc,YACrCC,YAAYN,UAAYD,EAAQ,eAEhCD,GAAGS,YAAYC,KAAKL,kBACpBL,GAAGS,YAAYC,KAAKF,kBAEpBG,oBAEAC,SAAWF,KAAKE,SAASC,KAAKH,WAC9BI,QAAUJ,KAAKI,QAAQD,KAAKH,WAC5BK,OAASL,KAAKK,OAAOF,KAAKH,WAE1BP,OAAOa,iBAAiB,SAAUN,KAAKE,UAAU,QACjDT,OAAOa,iBAAiB,QAASN,KAAKI,SAAS,QAC/CX,OAAOa,iBAAiB,OAAQN,KAAKK,QAAQ,UAKpDhB,EAAakB,UAAUL,SAAW,gBAC3BD,gBAKPZ,EAAakB,UAAUH,QAAU,WAChBnB,EAAWe,KAAKV,GAAGE,WAAWgB,QAAQ,eAAiB,IACvDR,KAAKV,GAAGE,WAAa,gBAKtCH,EAAakB,UAAUF,OAAS,eApDLI,EAqDVxB,EAAWe,KAAKV,GAAGE,WAAWgB,QAAQ,eAAiB,IACxDR,KAAKV,GAAGE,WAtDGiB,EAsDwC,aArD1DxB,EAqDuCe,KAAKV,GAAGE,WArD/BkB,OAAO,SAAUC,UAC/BA,IAAUF,GAAiB,KAAVE,IACvBC,KAAK,QAwDVvB,EAAakB,UAAUM,sBAAwB,kBACtCb,KAAKP,OAAOqB,iBAAiB,WAAyC,IAA/Bd,KAAKP,OAAOsB,cAAuB,EAAIf,KAAKP,OAAOsB,eAAeC,aAKlH3B,EAAakB,UAAUN,aAAe,gBAC/BN,YAAYsB,UAAYjB,KAAKa"}